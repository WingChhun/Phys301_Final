#INPUT DEVICES


#Programming Mode Constraints
NET "Clock" LOC =B8 ; #CLssOCK
NET "RunMode" LOC = N3; #Turn on for Run Mode, Off by default is Debug mode

NET "RunModeLED" LOC = G1; #LED to display Run Mode, 1 for Run, 0 for Debug(default)


NET "btn_CLR" LOC = G12; #CLEAR - current address in memory
NET "btn_Memory" LOC = C11; #Button to write to memory

NET "Toggle_Output" LOC = K3; #DEBUG - Switch between INS-Mem output, and D-mem output
NET "En_D_Memory" LOC = F3; #DEBUG - Enable write to Data memory
NET "En_I_Memory" LOC = E2; #DEBUG - Enable write to Instruction Memory

#NET "EN_hex" LOC = G3;
NET "EnableDataLED" LOC = N4; #DEBUG - LED for Data Enable
NET "EnableInstructionLED" LOC = P4; #DEBUG - Enable LED for Enable Instruction

#
#WCLK for Keypad Registers Input
#
NET "C_WriteOne" LOC = A7; #BTN - Powers writeDataEnable
NET "C_WriteOne" CLOCK_DEDICATED_ROUTE = FALSE;

NET "C_Write" CLOCK_DEDICATED_ROUTE = FALSE;
NET "C_Write" LOC = M4; #Debug - Toggle switch to write address, using adder,
								#If wanting to use shiftreg, Load, SHift, Load, then toggle this switch to write correctly
NET "C_Shift" LOC = B4; #BTN - Powers writeAddress
NET "C_Shift" CLOCK_DEDICATED_ROUTE = FALSE;

#
# Chose between IR/DR, AddressMode/DataMode and SwitchSpeed
#
NET "AorD" LOC = P11; #Address or Data for programming purposes
NET "IRorDR" LOC = L3; #DEBUG- load between Instruction register and data register
#NET "Pulse" LOC = P6;
#
# Program counter 
#
NET "SWITCH_SPeed" LOC = G3;
#NET "Step" LOC = C11; #Push and increment run counter by 1

#
#Binary LED Output INstruction
#
#Test LEDs for IReg
#NET "A_shiftO[0]" LOC = M5;
#NET "A_shiftO[1]" LOC = M11;
#NET "A_shiftO[2]" LOC = P7;
#NET "A_shiftO[3]" LOC = P6;
#LEDS for DReg
##NET "D_RegisterO[0]" LOC= P7;
#NET "D_RegisterO[1]" LOC= P6;

#Flag switch for subtraction or addition, 
# 0 = Addition
# 1 = Subtraction

#NET "Flag" LOC = G12;

#NET "A_shiftO[0]" LOC = M5;
#NET "A_shiftO[1]" LOC = M11;
#NET "A_shiftO[2]" LOC = P7;
#NET "A_shiftO[3]" LOC = P6;

#NET "D_Output[0]" LOC = M5;
#NET "D_Output[1]" LOC = M11;
#NET "D_Output[2]" LOC = P7;
#NET "D_Output[3]" LOC = P6;

#Debug mode Constrains

#
#
#

#
#Constraints for Instruction Memory
#

#
#Constraints for Data Memory
#



#Key
#NET "KeyO" LOC = M5;

#Test to see if power is running through colO
NET "colO[0]" LOC = B2;
NET "colO[1]" LOC = A3;
NET "colO[2]" LOC = J3;
NET "colO[3]" LOC = B5;
#Anodes 0 -3
NET "anO[3]" LOC = K14;
NET "anO[2]" LOC = M13;
NET "anO[1]" LOC = J12; #First anode 
NET "anO[0]" LOC = F12; #SEcond anode on board
#Plan ahead Cathode output
NET "sseg[7]" LOC = N13; # decimal point dont need 
NET "sseg[0]" LOC = M12; #CG
NET "sseg[1]" LOC = L13; #CF
NET "sseg[2]" LOC = P12; #CE
NET "sseg[3]" LOC = N11; #CD
NET "sseg[4]" LOC = N14; #CC
NET "sseg[5]" LOC = H12; #CB
NET "sseg[6]" LOC = L14; #CA

#
#Keypad Constraints and BCD
#

# PlanAhead Generated physical constraints 
#Columns
NET "colO[0]" LOC = B2;
NET "colO[1]" LOC = A3;
NET "colO[2]" LOC = J3;
NET "colO[3]" LOC = B5;
#Rows
NET "row[0]" LOC = C6;
NET "row[1]" LOC = B6;
NET "row[2]" LOC = C5;
NET "row[3]" LOC = B7;